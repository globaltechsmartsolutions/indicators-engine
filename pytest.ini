[pytest]
pythonpath = src
asyncio_mode = auto
markers =
    e2e: end-to-end con dxFeed (requiere red y extractor Java)

# ========== NATS ==========
nats_url = nats://127.0.0.1:4222

# ========== SUBJECTS DE ENTRADA (md.*) ==========
candles_subjects = ["md.candles.>"]         # o ["md.candles.1m"]
trades_subjects  = ["md.trades.vwap", "md.trades.oflow"]
book_subjects    = ["md.book.frame", "md.book.l2.frame", "md.bbo.frame"]

# ========== SUBJECTS DE SALIDA ==========
rsi_subject            = indicators.candles.1m.rsi10
adx_subject            = indicators.candles.1m.adx30
macd_subject           = indicators.candles.1m.macd12_26_9
out_cob_subject        = indicators.cob
out_book_order_subject = indicators.book_order
out_liquidity_subject  = indicators.liquidity

# ========== PARÁMETROS DE INDICADORES ==========
rsi_period             = 10
adx_period             = 30
liquidity_depth_levels = 10

# ========== DATOS SINTÉTICOS PARA PRUEBAS ==========
candle_symbol          = ESZ5
candle_tf              = 1m
candle_n               = 120
candle_price           = 648.0
candle_amplitude       = 0.35
candle_pattern         = zigzag
candle_seed            = 1

# ========== UI / RUNTIME ==========
# (Filtros, frecuencia y cambios mínimos para LiveRenderer)
tf_filter              = 1m,5m,-
ui_min_change          = 0.01
ui_min_ms              = 400
indicators             = rsi10,adx30,macd,vwap_bar,liquidity,heatmap

# ========== LOGS / DEBUG ==========
# Nivel de log: DEBUG, INFO, WARNING, ERROR
RUNNER_LOG_LEVEL       = INFO
RUNNER_STATS_EVERY_MS  = 5000
RUNNER_DEBUG_MAX_PAYLOAD = 512